name: Deploy React TypeScript App to DigitalOcean Droplet

on:
  push:
    branches: [ "staging" ] # Adjust branches as needed
  pull_request:
    branches: ["staging" ] # Adjust branches as needed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Ensure this matches your project's Node.js version

    - name: Install dependencies
      run: npm install

    - name: Lint code
      run: npm run lint

    - name: Build the React app
      run: npm run build

    - name: List dist directory contents
      run: ls -al dist

    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass

    - name: Deploy to Droplet via SSH
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SSH_HOST_NAME: ${{ secrets.SSH_HOST_NAME }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        DEPLOYMENT_DIRECTORY: ${{ secrets.DEPLOYMENT_DIRECTORY }}
      run: |
        # Remove all files in the deployment directory with sudo
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST_NAME "echo $SSH_PASSWORD | sudo -S rm -rf $DEPLOYMENT_DIRECTORY/*"

        # Transfer only the contents of the dist directory
        rsync -avz --delete-after dist/ $SSH_USERNAME@$SSH_HOST_NAME:$DEPLOYMENT_DIRECTORY/

        # Restart Nginx using sshpass to handle the password
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST_NAME "echo $SSH_PASSWORD | sudo -S systemctl restart nginx"
